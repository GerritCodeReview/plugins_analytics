{
  "comments": [
    {
      "key": {
        "uuid": "9d7eee02_454ed80b",
        "filename": "build.sbt",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-09-03T10:18:14Z",
      "side": 0,
      "message": "This was unused?",
      "range": {
        "startLine": 29,
        "startChar": 28,
        "endLine": 29,
        "endChar": 42
      },
      "revId": "831b6543d6185bf894f4e9e2d01df9081cbf8b58",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f89b07de_2b0516a1",
        "filename": "build.sbt",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-09-03T10:40:49Z",
      "side": 0,
      "message": "integration tests fail with bouncy castle provider dependency, probably due to binary incompatibility with what gerrit-plugin-api uses:\nThing is, this should not be included at all, as the analytics plugin does not access bc directly, it should be provided by the gerrit-plugin-api.\n\nI will open an issue in gerrit so that bc library is provided by gerrit-plugin-api",
      "parentUuid": "9d7eee02_454ed80b",
      "range": {
        "startLine": 29,
        "startChar": 28,
        "endLine": 29,
        "endChar": 42
      },
      "revId": "831b6543d6185bf894f4e9e2d01df9081cbf8b58",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dfd5173_fa4def30",
        "filename": "build.sbt",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-09-03T10:52:11Z",
      "side": 0,
      "message": "It cannot be provided by the plugin API (or gerrit-acceptance-test library), because bouncy castle libraries are security libraries with signatures and thus cannot be merged in Gerrit\u0027s plugin API library.",
      "parentUuid": "f89b07de_2b0516a1",
      "range": {
        "startLine": 29,
        "startChar": 28,
        "endLine": 29,
        "endChar": 42
      },
      "revId": "831b6543d6185bf894f4e9e2d01df9081cbf8b58",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5dfd8236_02bb5c01",
        "filename": "build.sbt",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-09-03T12:32:06Z",
      "side": 0,
      "message": "oh, I didn\u0027t know that was the case.\nHowever, why shouldn\u0027t this be provided by the gerrit-acceptance-test framework? What\u0027s the security risk with that?\nA consumer of the test library shouldn\u0027t need to know that bouncy castle is required and add that explicitly.\n\nAny suggestion @David?",
      "parentUuid": "8dfd5173_fa4def30",
      "range": {
        "startLine": 29,
        "startChar": 28,
        "endLine": 29,
        "endChar": 42
      },
      "revId": "831b6543d6185bf894f4e9e2d01df9081cbf8b58",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d63feca9_20ed51cb",
        "filename": "build.sbt",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-09-04T10:42:12Z",
      "side": 0,
      "message": "\u003e oh, I didn\u0027t know that was the case.\n\u003e However, why shouldn\u0027t this be provided by the gerrit-acceptance-test framework?\n\nIt wouldn\u0027t work for the same reason, it wouldn\u0027t work to merge the BC library in the plugin API: BC JARs are security JARs and thus signed. If you merged the content of the JARs in another JAR and remove the signature, effectively hacking the JAR content by replacing some of the classes inside the JAR the code wouldn\u0027t work. The tests or productive code would fail. The only way to make it work is to include the original JARs in productive release.war and put the original BC JAR on classpath whe running gerrit tests. That ist exactly what bazel test machiery is doing for gerrit core and for gerrit plugins (in gerrit tree and in standalone build modes). See where this is defined in the standalone plugin build mode [1].\n\nSBT build tool chain should do the same and include original BC libraries during the tests.\n\n* [1] https://github.com/GerritCodeReview/bazlets/blob/master/tools/commons.bzl#L9-L14",
      "parentUuid": "5dfd8236_02bb5c01",
      "range": {
        "startLine": 29,
        "startChar": 28,
        "endLine": 29,
        "endChar": 42
      },
      "revId": "831b6543d6185bf894f4e9e2d01df9081cbf8b58",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1859e66_2a1235aa",
        "filename": "build.sbt",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-09-17T13:42:34Z",
      "side": 0,
      "message": "I understand David.\nUnfortunately analytics plugin at the moment is built via sbt rather than bazel, so we can\u0027t use the bazlets.\nAt the moment the dependency is added explicitly and things work as expected.",
      "parentUuid": "d63feca9_20ed51cb",
      "range": {
        "startLine": 29,
        "startChar": 28,
        "endLine": 29,
        "endChar": 42
      },
      "revId": "831b6543d6185bf894f4e9e2d01df9081cbf8b58",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}