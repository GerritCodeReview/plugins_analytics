{
  "comments": [
    {
      "key": {
        "uuid": "3ebd79d7_82a65e44",
        "filename": "README.md",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:43:50Z",
      "side": 1,
      "message": "If there is something to configure, you should put into the config.md.\nThis README.md is becoming the entire plugin\u0027s documentation, which isn\u0027t the purpose.",
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90f62449_93ad0420",
        "filename": "README.md",
        "patchSetId": 15
      },
      "lineNbr": 29,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:39:44Z",
      "side": 1,
      "message": "wrap long line.",
      "range": {
        "startLine": 29,
        "startChar": 80,
        "endLine": 29,
        "endChar": 92
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d41efe08_dd02c922",
        "filename": "README.md",
        "patchSetId": 15
      },
      "lineNbr": 31,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:39:44Z",
      "side": 1,
      "message": "gerrit.config",
      "range": {
        "startLine": 31,
        "startChar": 27,
        "endLine": 31,
        "endChar": 40
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c67800ff_2886e92f",
        "filename": "README.md",
        "patchSetId": 15
      },
      "lineNbr": 35,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:39:44Z",
      "side": 1,
      "message": "wrap long line",
      "range": {
        "startLine": 35,
        "startChar": 80,
        "endLine": 35,
        "endChar": 91
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85ea8d78_56a70d0d",
        "filename": "README.md",
        "patchSetId": 15
      },
      "lineNbr": 36,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:39:44Z",
      "side": 1,
      "message": "wrap long line",
      "range": {
        "startLine": 36,
        "startChar": 80,
        "endLine": 36,
        "endChar": 91
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64ef64de_c7926cf7",
        "filename": "README.md",
        "patchSetId": 15
      },
      "lineNbr": 39,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:39:44Z",
      "side": 1,
      "message": "wrap long line",
      "range": {
        "startLine": 39,
        "startChar": 80,
        "endLine": 39,
        "endChar": 92
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aec348b1_2661fc4d",
        "filename": "README.md",
        "patchSetId": 15
      },
      "lineNbr": 44,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:43:50Z",
      "side": 1,
      "message": "Is this needed?",
      "range": {
        "startLine": 44,
        "startChar": 29,
        "endLine": 44,
        "endChar": 48
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "594e0482_5dd03966",
        "filename": "README.md",
        "patchSetId": 15
      },
      "lineNbr": 45,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:43:50Z",
      "side": 1,
      "message": "same as above",
      "range": {
        "startLine": 45,
        "startChar": 29,
        "endLine": 45,
        "endChar": 35
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1a1e29c_d454f850",
        "filename": "README.md",
        "patchSetId": 15
      },
      "lineNbr": 48,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:43:50Z",
      "side": 1,
      "message": "Can you clarify? Limiting the disk size is disabled or there is no disk-level caching?",
      "range": {
        "startLine": 48,
        "startChar": 15,
        "endLine": 48,
        "endChar": 34
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50d92f20_c1d0fbbb",
        "filename": "README.md",
        "patchSetId": 15
      },
      "lineNbr": 49,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:43:50Z",
      "side": 1,
      "message": "No need to specify `entries` but just the default value",
      "range": {
        "startLine": 49,
        "startChar": 24,
        "endLine": 49,
        "endChar": 31
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "612e5a53_2e5e9a64",
        "filename": "src/main/scala/com/googlesource/gerrit/plugins/analytics/common/CommitsStatistics.scala",
        "patchSetId": 15
      },
      "lineNbr": 87,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:57:32Z",
      "side": 1,
      "message": "It would be best to use an implicit parameter, as the CommitsStatisticsCache I believe should be a singleton for the entire Gerrit JVM.",
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dcb7f56_68d0d3a5",
        "filename": "src/main/scala/com/googlesource/gerrit/plugins/analytics/common/CommitsStatistics.scala",
        "patchSetId": 15
      },
      "lineNbr": 107,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:57:32Z",
      "side": 1,
      "message": "This is the loading function of the cache: it shouldn\u0027t be passed as parameter because effectively is part of the caching loading logic.\n\nAs a matter of fact, it is used only once and only here. Reusing the get() with a different function wouldn\u0027t make any sense.\n\nExample:\n\ncommitsStatsCache.get(key1, forSingleCommit)\nand then\ncommitsStatsCache.get(key1, anotherComplexFunction)\n\nThe second invocation would be a lie because the commitsStatsCache would still return the computation of the \u0027forSingleCommit\u0027 as cached value.\n\nBottom line: this function doesn\u0027t belong to the get() method but to the constructor of the cache.",
      "range": {
        "startLine": 107,
        "startChar": 52,
        "endLine": 107,
        "endChar": 67
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16f41313_f8b7095e",
        "filename": "src/main/scala/com/googlesource/gerrit/plugins/analytics/common/CommitsStatistics.scala",
        "patchSetId": 15
      },
      "lineNbr": 126,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:57:32Z",
      "side": 1,
      "message": "Gerrit already has metrics for caches: why do we need this?",
      "range": {
        "startLine": 126,
        "startChar": 4,
        "endLine": 126,
        "endChar": 135
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd9046c3_0bf3f34d",
        "filename": "src/main/scala/com/googlesource/gerrit/plugins/analytics/common/CommitsStatistics.scala",
        "patchSetId": 15
      },
      "lineNbr": 145,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:57:32Z",
      "side": 1,
      "message": "This seems unrelated to this change: it\u0027s a missing close() of a DiffFormatter and should be addressed separately.",
      "range": {
        "startLine": 145,
        "startChar": 6,
        "endLine": 145,
        "endChar": 10
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a477ae92_eb590f37",
        "filename": "src/main/scala/com/googlesource/gerrit/plugins/analytics/common/CommitsStatistics.scala",
        "patchSetId": 15
      },
      "lineNbr": 147,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:57:32Z",
      "side": 1,
      "message": "Can you explain why are you setting the context to zero? Is it related to this change?",
      "range": {
        "startLine": 147,
        "startChar": 8,
        "endLine": 147,
        "endChar": 24
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7703729b_09ccfb6e",
        "filename": "src/main/scala/com/googlesource/gerrit/plugins/analytics/common/CommitsStatistics.scala",
        "patchSetId": 15
      },
      "lineNbr": 162,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T10:57:32Z",
      "side": 1,
      "message": "Populating the cache value is not part of the loading function responsibility but rather the cache should do it.",
      "range": {
        "startLine": 162,
        "startChar": 8,
        "endLine": 162,
        "endChar": 52
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "122fb113_099fdc6e",
        "filename": "src/main/scala/com/googlesource/gerrit/plugins/analytics/common/CommitsStatisticsCacheModule.scala",
        "patchSetId": 15
      },
      "lineNbr": 30,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T11:25:15Z",
      "side": 1,
      "message": "Instead of rebuilding a new guava cache, why not reusing the diff_intraline?\nIt seems that does *exactly* what we need, the diff between two object ids.\n\nLook at IntraLineLoader.java in Gerrit.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 30,
        "endChar": 56
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a357abb5_8f9882d0",
        "filename": "src/test/scala/com/googlesource/gerrit/plugins/analytics/test/CommitStatisticsCommentLinkSpec.scala",
        "patchSetId": 15
      },
      "lineNbr": 40,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T12:02:37Z",
      "side": 1,
      "message": "Pass this implicitly",
      "range": {
        "startLine": 40,
        "startChar": 77,
        "endLine": 40,
        "endChar": 103
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7362d20_90d20feb",
        "filename": "src/test/scala/com/googlesource/gerrit/plugins/analytics/test/CommitStatisticsSpec.scala",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T12:02:37Z",
      "side": 1,
      "message": "Pass this implicitly",
      "range": {
        "startLine": 26,
        "startChar": 58,
        "endLine": 26,
        "endChar": 84
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a47d0ac1_867bd216",
        "filename": "src/test/scala/com/googlesource/gerrit/plugins/analytics/test/CommitsStatisticsNoCache.scala",
        "patchSetId": 15
      },
      "lineNbr": 20,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T12:02:37Z",
      "side": 1,
      "message": "This isn\u0027t needed because the Gerrit caches have already metrics associated.",
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0028dc0_2089d130",
        "filename": "src/test/scala/com/googlesource/gerrit/plugins/analytics/test/UserActivitySummarySpec.scala",
        "patchSetId": 15
      },
      "lineNbr": 21,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-05T12:02:37Z",
      "side": 1,
      "message": "Pass this implicitly",
      "range": {
        "startLine": 21,
        "startChar": 114,
        "endLine": 21,
        "endChar": 140
      },
      "revId": "1b7da2bccc5b056198d10dfa1e4325dbb8ecf716",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}